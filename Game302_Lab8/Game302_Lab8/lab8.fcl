FUNCTION_BLOCK

VAR_INPUT
	Num_Enemy	REAL; (* RANGE(0 .. 100) *) 
	Distance_Enemy	REAL; (* RANGE(0 .. 200) *) 
END_VAR

VAR_OUTPUT
	Flame_Strength	REAL; (* RANGE(0 .. 10) *) 
END_VAR

FUZZIFY Num_Enemy
	TERM Few := (0, 1) (20, 1) (50, 0) ;
	TERM Medium := (20, 0) (50, 1) (85, 0) ;
	TERM Many := (50, 0) (85, 1) (100, 1) ;
END_FUZZIFY

FUZZIFY Distance_Enemy
	TERM Close := (0, 1) (20, 1) (100, 0) ;
	TERM Medium := (20, 0) (100, 1) (160, 0) ;
	TERM Far := (100, 0) (160, 1) (200, 1) ;
END_FUZZIFY

FUZZIFY Flame_Strength
	TERM Low := (0, 1) (2, 1) (5, 0) ;
	TERM Medium := (2, 0) (5, 1) (8, 0) ;
	TERM High := (5, 0) (8, 1) (10, 1) ;
END_FUZZIFY

DEFUZZIFY valve
	METHOD: MoM;
END_DEFUZZIFY

RULEBLOCK first
	AND:MIN;
	ACCUM:MAX;
	RULE 0: IF (Num_Enemy IS Few) AND (Distance_Enemy IS Close) THEN (Flame_Strength IS Medium);
	RULE 1: IF (Num_Enemy IS Few) AND (Distance_Enemy IS Medium) THEN (Flame_Strength IS Low);
	RULE 2: IF (Num_Enemy IS Few) AND (Distance_Enemy IS Far) THEN (Flame_Strength IS Low);
	RULE 3: IF (Num_Enemy IS Medium) AND (Distance_Enemy IS Close) THEN (Flame_Strength IS High);
	RULE 4: IF (Num_Enemy IS Medium) AND (Distance_Enemy IS Medium) THEN (Flame_Strength IS Medium);
	RULE 5: IF (Num_Enemy IS Medium) AND (Distance_Enemy IS Far) THEN (Flame_Strength IS Low);
	RULE 6: IF (Num_Enemy IS Many) AND (Distance_Enemy IS Close) THEN (Flame_Strength IS High);
	RULE 7: IF (Num_Enemy IS Many) AND (Distance_Enemy IS Medium) THEN (Flame_Strength IS High);
	RULE 8: IF (Num_Enemy IS Many) AND (Distance_Enemy IS Far)  THEN (Flame_Strength IS Medium);
END_RULEBLOCK

END_FUNCTION_BLOCK